#summary Procedures for deploying OLAC on a new, dedicated machine.
#labels n

= Introduction =

Add your content here.


= Details =

== The machine ==

Created a vm on a vmware server with 4 CPU/2GB RAM/250GB HDD. The architecture of the machine is i686. The virtual HDD was created on a NFS storage.

== The OS ==

=== Installation ===
Debian 5.0.3 was chosen because we were told that Debian as a server is more stable than Ubuntu by a system administrator.

Created one partition without a swap partition. A swap file will be added later instead.

Created a user account olac (OLAC System Admin). This account will be used for doing things that are needed to be done as a root.

For software configuration, the followings were checked.

 * Web server
 * SQL server (this was a mistake since it installed postgresql instead of mysql)
 * Standard machine

=== Configuration 1: Sudo ===
In order to make olac a sudoer, installed sudo by running "apt-get install sudo" as a root user.

Run visudo to edit /etc/sudoers file. Add a line at the end: "olac ALL=(ALL) ALL". We are giving full privileges for now, but this can be changed later.

=== Configuration 2: Uninstall postgresql ===
This step is not needed if "SQL server" is not checked in the software configuration step during Debian installation.

Uninstalled postgresql by running

 * apt-get autoremove postgresql-8.3
 * apt-get autoremove postgresql-client-8.3
 * apt-get autoremove postgresql-doc-8.3

Some residue of the initial installation remained, e.g. /var/lib/postgresql, /etc/init.d/postgresql-8.3, etc., but didn't try to remove them.

=== Configuration 3: Swap file ===

Create a swap file as follows.

 * dd if=/dev/zero of=/swap bs=1024k count=4096
 * mkswap /swap
 * swapon /swap

Modify /etc/fstab to add the following line:

 * /swap swap swap defaults 0 0


=== Configuration 4: Webmaster account ===

Created a new account olacweb (OLAC Web Admin) within olacweb group. The home directory was set to /olac and password was disabled.

 * groupadd olacweb
 * useradd -g olacweb -G www-data -d /olac -m -s /bin/bash -c "OLAC Web Admin" olacweb

As the olacweb user, create the following directories:

 * mkdir cgi conf doc pkg svn templates wsgi www
 * www is the doc root
 * cgi is for CGI scripts
 * wsgi is for WSGI scripts
 * templates is mainly for PyMeld templates
 * pkg is for software packages (mostly in-house apps)
 * conf is the configuration directory


=== Configuration 5: SSH ===

Installed ssh daemon as follows.

 * apt-get install openssh-server

Added users ssh public keys to the ~olacweb/.ssh/authrorized_keys file.


=== Configuration 6: MySQL ===

 * apt-get install mysql-server

Created databases and user account after logging in as a root user.

 * create database olac;
 * create database olactmp;
 * grant all on olac.* to olac@localhost;
 * grant all on olactmp.* to olac@localhost;
 * set password for olac@localhost = password('...');


=== Configure 6: Apache ===

 * cp /etc/apache2/sites-available/{default,olac}

Edited /etc/apache2/sites-available/olac. The followings are changed made:

 * ServerName www.language-archives.org
 * ServerAdmin olac@localhost
 * DocumentRoot /olac/www
 * <Directory /olac/www>
 * ScriptAlias /cgi-bin/ /olac/cgi/
 * <Directory "/olac/cgi">
 * ErrorLog /var/log/apache2/error-olac.log
 * CustomLog /var/log/apache2/access-olac.log combined
 * (Removed everything related to /doc/.)

Disabled the default site and enabled the olac site:

 * rm /etc/apache2/sites-enabled/000-default
 * (the above would not be necessary if DNS entry was properly updated with the machine's IP addr)
 * ln -s ../sites-available/olac /etc/apache2/sites-enables/001-olac
 * /etc/init.d/apache2 restart

=== Other packages ===

 * apt-get install php5-mysql
 * apt-get install python-mysqldb
 * apt-get install subversion
 * apt-get install rsync


== Setting up OLAC ==

In this section, the olacweb account assumed.

Check out the web content from the SVN repository:

 * svn checkout https://olac.googlecode.com/svn/ /olac/svn --username ...
 
Copy web contents and other files.

 * rsync -av --exclude=.svn /olac/svn/web/* /olac/svn/www
 * rsync -av --exclude=.svn /olac/svn/nonweb/* /olac

As a root user do

 * cp /olac/svn/system/olacbase /etc
 * cp /olac/svn/system/olacvar /bin
 * cp /olac/svn/system/olacvarlist /bin
 * mkdir /usr/lib/python2.5/site-packages/olac
 * cp /olac/svn/system/python/*.py /usr/lib/python2.5/site-packages/olac
 * cp /olac/svn/system/optionparser.py /usr/lib/python2.5/site-packages
 * mkdir /usr/share/php  # this is the default include path of php
 * cp /olac/svn/system/olac.php /usr/share/php

As olacweb do the following.

{{{
cat > ~/.my.cnf <<EOF
[client]
user = olac
password = "..."
host = localhost
db = olac
default_character_set = utf8
EOF
chmod 600 ~/.my.cnf
}}}

Go to the svn/web/tools directory and follow instructions in the README file to populate the database.
(OLAC extensions should be loaded for both OLAC 1.0 and 1.1.) (The OLAC schema is missing SERVICES table.)
